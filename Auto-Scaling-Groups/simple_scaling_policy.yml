AWSTemplateFormatVersion: "2010-09-09"
Description: AWS CloudFormation script to spin up Launch configuration Template, AutoScalingGroup and Simple ASG Scaling Policy
Parameters:
  ImageId: 
    Description: "The ID of the AMI."
    Type: "String"
    Default: "ami-ab49f8d"
  SubnetOne: 
    Description: "Subnet ID One in a virtual private cloud (VPC)."
    Type: "String"
    Default: "subnet-5ea0c127"
  SubnetTwo: 
    Description: "Subnet IDs Two in a virtual private cloud (VPC)."
    Type: "String"
    Default: "subnet-6194ea3b"
  SecurityGroupOne: 
    Description: "Security group names. For a nondefault VPC, you must use security group IDs instead."
    Type: "String"
    Default: "sg-903004f8"
  SecurityGroupTwo: 
    Description: "Security group names. For a nondefault VPC, you must use security group IDs instead."
    Type: "String"
    Default: "sg-7c227019"

Resources:
  DOPLaunchConfiguration:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateName: !Sub ${AWS::StackName}-launch-configuration-template
      LaunchTemplateData: 
        BlockDeviceMappings: 
          - Ebs:
              VolumeSize: 8
            DeviceName: /dev/sdf
        CreditSpecification: 
          CpuCredits: Unlimited
        ImageId: !Ref ImageId
        InstanceType: t2.micro
        KeyName: dop-launch-configuration
        Monitoring: 
          Enabled: true
        SecurityGroupIds: 
          - !Ref SecurityGroupOne
          - !Ref SecurityGroupTwo

  DOPAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: 
        Fn::GetAZs: ""
      AutoScalingGroupName: DOP Auto Scaling Group
      MinSize: "1"
      MaxSize: "4"
      DesiredCapacity: "2"
      HealthCheckGracePeriod: 300
      LaunchTemplate:
        LaunchTemplateId: !Ref DOPLaunchConfiguration
        Version: !GetAtt DOPLaunchConfiguration.LatestVersionNumber
      VPCZoneIdentifier:
        - !Ref SubnetOne
        - !Ref SubnetTwo

  # Specifies an Amazon EC2 Auto Scaling scaling policy so that the Auto Scaling group can change the number of instances 
  # available for your application in response to changing demand.

  # You can specify the adjustment type as a percentage of the current capacity 
  # of your Auto Scaling group, or in capacity units. There are 3 AdjustmentType: ChangeInCapacity, ExactCapacity, PercentChangeInCapacity 
  # These Adjustment Types are only valid if the Scaling policy is Simple or Step Scaling Policy

  # In this Simple Scaling Policy I have used ChangeInCapacity Adjustment Type.
  # Increment or decrement the current capacity of the group by the specified value.
  # For example: If the current capacity of the group is 2 and the adjustment is 1, 
  # then when this policy is performed, we add 1 capacity units to the capacity for a total of 3 capacity units.
  
  ASGSimpleScalingPolicy: 
    Type: AWS::AutoScaling::ScalingPolicy
    Properties: 
      AdjustmentType: "ChangeInCapacity"
      PolicyType: "SimpleScaling"
      Cooldown: "300"
      AutoScalingGroupName: 
        Ref: "DOPAutoScalingGroup"
      ScalingAdjustment: 1


  # Explanation of ExactCapacity and PercentChangeInCapacity Adjustment Types for Simple Scaling Policies

  # ExactCapacity — Change the current capacity of the group to the specified value. 
  # Specify a positive value with this adjustment type. 
  # For example: If the current capacity of the group is 2 and the adjustment is 4, then when this policy is performed, 
  # we change the capacity to 4 capacity units.

  ASGSimpleScalingPolicyTwo: 
    Type: AWS::AutoScaling::ScalingPolicy
    Properties: 
      AdjustmentType: "ExactCapacity"
      PolicyType: "SimpleScaling"
      Cooldown: "300"
      AutoScalingGroupName: 
        Ref: "DOPAutoScalingGroup"
      ScalingAdjustment: 1

  # PercentChangeInCapacity — Increment or decrement the current capacity of the group by the specified percentage. 
  # A positive value increases the capacity and a negative value decreases the capacity. 
  # For example: If the current capacity is 10 and the adjustment is 10 percent, then when this policy is performed, 
  # we add 1 capacity unit to the capacity for a total of 11 capacity units.

  ASGSimpleScalingPolicyThree: 
    Type: AWS::AutoScaling::ScalingPolicy
    Properties: 
      AdjustmentType: "PercentChangeInCapacity"
      PolicyType: "SimpleScaling"
      Cooldown: "300"
      AutoScalingGroupName: 
        Ref: "DOPAutoScalingGroup"
      MinAdjustmentMagnitude: 1